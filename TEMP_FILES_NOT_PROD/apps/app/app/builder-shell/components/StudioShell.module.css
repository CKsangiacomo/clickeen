.root {
  --studio-bg: #dadada;
  --panel-bg: #ffffff;
  --panel-border-radius: 12px;
  --panel-border: 1px solid rgba(17, 24, 39, 0.08);
  --ink: #111827;
  --ink-muted: rgba(17, 24, 39, 0.64);
  --accent: #0a62ff;
  --accent-soft: rgba(10, 98, 255, 0.12);
  --focus-ring: 0 0 0 2px rgba(10, 98, 255, 0.4);
  --drawer-width: 260px;
  --drawer-collapsed: 48px;
  --transition: 200ms cubic-bezier(0.4, 0, 0.2, 1);
  font-family: "Inter Tight", "Inter", system-ui, -apple-system, "Segoe UI", sans-serif;
  min-height: 100vh;
  display: grid;
  grid-template-rows: auto 1fr;
  gap: 8px;
  background: var(--studio-bg);
  color: var(--ink);
  padding: 8px;
}

.topDrawer {
  background: var(--panel-bg);
  border-radius: var(--panel-border-radius);
  border: var(--panel-border);
  padding: 8px 16px 12px;
  display: grid;
  gap: 12px;
  transition: padding var(--transition), grid-template-rows var(--transition);
}

.topDrawerHeader {
  display: grid;
  grid-template-columns: auto 1fr auto;
  gap: 12px;
  align-items: center;
}

.topDrawerHeader button {
  border: none;
  background: none;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border-radius: 8px;
  color: var(--accent);
  cursor: pointer;
  transition: background var(--transition);
}

.topDrawerHeader button:hover,
.topDrawerHeader button:focus-visible {
  background: var(--accent-soft);
  outline: none;
  box-shadow: var(--focus-ring);
}

.topDrawerOpen {
  padding: 12px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.topDrawerTitle {
  font-size: 15px;
  font-weight: 600;
}

.topDrawerContent {
  display: none;
}

.topDrawerOpen .topDrawerContent {
  display: block;
}

.templateGrid {
  display: grid;
  gap: 16px;
  grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
}

.templateCard {
  background: #f7f8fa;
  border-radius: 12px;
  padding: 12px;
  display: grid;
  gap: 8px;
  cursor: pointer;
  transition: transform var(--transition), box-shadow var(--transition);
}

.templateCard:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 30px rgba(17, 24, 39, 0.08);
}

.templateCard img {
  width: 100%;
  border-radius: 8px;
  aspect-ratio: 4 / 3;
  object-fit: cover;
  background: #fff;
}

.templateName {
  font-size: 13px;
  font-weight: 500;
}

.main {
  display: grid;
  grid-template-columns: var(--drawer-width) 1fr var(--drawer-width);
  gap: 8px;
  height: 100%;
  min-height: 0;
}

.main[data-left="closed"] {
  grid-template-columns: var(--drawer-collapsed) 1fr var(--drawer-width);
}

.main[data-right="closed"] {
  grid-template-columns: var(--drawer-width) 1fr var(--drawer-collapsed);
}

.drawer {
  background: var(--panel-bg);
  border-radius: var(--panel-border-radius);
  border: var(--panel-border);
  display: flex;
  flex-direction: column;
  overflow: hidden;
  transition: width var(--transition);
}

.drawerCollapsed {
  width: var(--drawer-collapsed);
}

.drawerCollapsed .drawerBody,
.drawerCollapsed .badge {
  display: none;
}

.drawerHeader {
  padding: 12px;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  border-bottom: var(--panel-border);
}

.drawerBody {
  padding: 12px;
  display: grid;
  gap: 8px;
  overflow-y: auto;
}

.badge {
  font-size: 12px;
  padding: 2px 6px;
  border-radius: 999px;
  background: var(--accent-soft);
  color: var(--accent);
}

.workspace {
  background: var(--panel-bg);
  border-radius: var(--panel-border-radius);
  border: var(--panel-border);
  display: flex;
  flex-direction: column;
  min-width: 0;
  overflow: hidden;
}

.workspaceHeader {
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: center;
  gap: 12px;
  padding: 12px 16px;
  border-bottom: var(--panel-border);
}

.workspaceControls {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

.segment {
  display: inline-flex;
  align-items: center;
  background: var(--accent-soft);
  border-radius: 999px;
  padding: 4px;
  gap: 4px;
}

.segment button {
  border: none;
  background: none;
  font-size: 12px;
  padding: 4px 10px;
  border-radius: 999px;
  cursor: pointer;
  transition: background var(--transition), color var(--transition);
}

.segment button[aria-pressed="true"],
.segment button[data-active="true"] {
  background: var(--accent);
  color: white;
}

.ctaButton {
  border: none;
  background: var(--accent);
  color: white;
  font-weight: 600;
  padding: 8px 18px;
  border-radius: 999px;
  cursor: pointer;
  transition: background var(--transition);
}

.ctaButton:hover {
  background: #084ccc;
}

.preview {
  flex: 1;
  position: relative;
  min-height: 0;
}

.previewStack {
  position: relative;
  width: 100%;
  height: 100%;
}

.previewFrame {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  border: none;
  border-radius: 16px;
  background: white;
  transition: opacity var(--transition);
}

.previewFrameHidden {
  opacity: 0;
  pointer-events: none;
}

.previewFrameVisible {
  opacity: 1;
}

.skeleton {
  position: absolute;
  inset: 0;
  border-radius: 16px;
  background: linear-gradient(90deg, rgba(0,0,0,0.04), rgba(0,0,0,0.08), rgba(0,0,0,0.04));
  background-size: 200% 100%;
  animation: shimmer 1.2s infinite;
}

@keyframes shimmer {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

@media (max-width: 1024px) {
  .main {
    grid-template-columns: var(--drawer-collapsed) 1fr var(--drawer-collapsed);
  }
}

@media (max-width: 767px) {
  .root {
    grid-template-rows: auto auto;
  }

  .main {
    grid-template-columns: 1fr;
    grid-template-rows: auto 1fr auto;
  }

  .drawer {
    position: fixed;
    inset: auto 0 0 0;
    width: 100%;
    max-height: 80vh;
    transform: translateY(110%);
    transition: transform var(--transition);
    border-radius: 16px 16px 0 0;
    z-index: 10;
  }

  .drawerMobileOpen {
    transform: translateY(0);
  }

  .drawerBackdrop {
    position: fixed;
    inset: 0;
    background: rgba(17, 24, 39, 0.4);
    opacity: 0;
    pointer-events: none;
    transition: opacity var(--transition);
  }

  .drawerBackdropVisible {
    opacity: 1;
    pointer-events: all;
  }
}
